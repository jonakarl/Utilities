#!/bin/bash
set -e

export PATH=/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
PING_TARGET=193.10.227.25 # may be overwritten by defaults

. /etc/default/monroe-experiments

#Setup the monroe namespace (backwards compatability)
monroe-netns || true

function mk_disk {
  # create and mount a base expereriment lvm disk
  # $1 - unique disk name
  mkdir -p $BASEDIR/$1
  if mountpoint -q $BASEDIR/$1; then
    echo "$1 outdir is mounted."
  else
    MNTPNT=""
    if [ -b /dev/vg-monroe/cont-$1 ]; then
      echo "logical volume exists on vg-monroe";
      MNTPNT=/dev/vg-monroe/cont-$1
    else
      mkdir -p $BASEDIR/$1
      if [ $(lvcreate -L 100M vg-monroe -n cont-$1) ]; then
        MNTPNT=/dev/vg-monroe/cont-$1
      else
        if [ ! -f $BASEDIR/$1.disk ]; then
          dd if=/dev/zero of=$BASEDIR/$1.disk bs=100000000 count=1
        fi
        MNTPNT=$BASEDIR/$1.disk
      fi
    fi;
    if [ -z "$(file -sL $MNTPNT | grep ext4)" ]; then
      mkfs.ext4 $MNTPNT -F -L $1
    fi
    mount -t ext4 $MNTPNT $BASEDIR/$1
  fi
}

##############################################################################

MAINTENANCE=$(cat /monroe/maintenance/enabled || echo 0)
DEVELOPMENT=$(cat /monroe/development/enabled || echo 0)
if [ $MAINTENANCE -eq 1 ] || [ $DEVELOPMENT -eq 1 ]; then
  docker stop -t 0 $(docker ps -q) || true;
  logger -t monroe-experiments "system in maintenance mode.";
  exit 1
fi

if [ ! -f "$KEY" ]; then
  logger -t monroe-experiments "repository key does not exist.";
  exit 1;
fi

exec 42>/var/lock/monroe-experiments.lock
flock -n 42 || {
  logger -t monroe-experiments "lock file present";
  LOCKAGE=$(cat /tmp/monroe-experiments.last || echo 0)
  if (( $(date +%s) - $LOCKAGE > 600 )); then
    rm /var/lock/monroe-experiments.lock;
  fi
  exit 1;
}
trap "flock -u 42" EXIT


if [ -z "$PING_NNE" ]; then
  mk_disk "ping";
  mk_disk "metadata";
  mk_disk "mplane";
  mk_disk "tstat";
fi

if [ ! -e /var/run/netns/monroe ]; then
  logger -t monroe-experiments "Network namespace is missing.";
  exit 1;
fi

CID=$(docker ps --no-trunc -aqf name=monroe-namespace)

INTERFACES_PING="op0 op1 op2 op3 op4";

if [ -f /etc/nodeid.n2 ]; then
  NODEID=$(cat /etc/nodeid.n2)
elif [ -f /etc/nodeid ];
  NODEID=$(cat /etc/nodeid)
  if [[ $PING_NNE -eq 1 ]]; then
    NODEID=$(( $(cat /etc/nodeid) + 800 ))
  fi
else
  NODEID=$(hostname)
fi

if [[ $PING_NNE -eq 1 ]]; then
  mk_disk "nne";
  IMAGEID=$(docker images -q --no-trunc base-$URL_PING|head -n 1)
  if [ -f /experiments/nne-node-experiments/node${NODEID}.json ]; then
    extract-instances -J /experiments/nne-node-experiments/node${NODEID}.json -D $BASEDIR/
  fi
  if [ -f $BASEDIR/node$NODEID.conf ]; then
    while read -r MCONFIG CONTAINER; do
      if [ "$CONTAINER" == "null" ]; then continue; fi
      if [ -z "$(docker ps --no-trunc|grep $MCONFIG)" ]; then
        docker run -d --name=$MCONFIG --net=container:$CID -v $BASEDIR/nne:/monroe/results -v /etc/nodeid:/nodeid:ro -v $BASEDIR/$MCONFIG:/monroe/config:ro $CONTAINER || true;
        logger -t monroe-experiments "started NNE container ($MCONFIG).";
      fi
    done < $BASEDIR/node$NODEID.conf
  fi
else
  for IF in $INTERFACES_PING; do
    if [ ! -z "$($MNS ip link|grep $IF)" ]; then
      if [ -z "$(docker ps --no-trunc|grep base-$URL_PING|grep $IF)" ]; then
        COUNT=$(cat $BASEDIR/ping.counter 2>/dev/null || echo 0)
        COUNT=$(($COUNT + 1))
        echo $COUNT > $BASEDIR/ping.counter

        IMAGEID=$(docker images -q --no-trunc base-$URL_PING|head -n 1)

        echo "{\"nodeid\":\"$NODEID\", \
               \"guid\":\"$IMAGEID.0.$NODEID.$COUNT\", \
               \"server\":\"$PING_TARGET\", \
               \"interfacename\": \"$IF\"}" > $BASEDIR/ping.$IF.conf

        rm $BASEDIR/ping/tmp* || true;
        docker run -d --net=container:$CID -v $BASEDIR/ping:/monroe/results -v /etc/nodeid:/nodeid:ro -v $BASEDIR/ping.$IF.conf:/monroe/config:ro base-$URL_PING $IF || true;
        logger -t monroe-experiments "started ping container on $IF.";
      fi;
    fi;
  done
fi

if [ -z "$PING_NNE" ]; then
  if [ -z "$(docker ps --no-trunc|grep base-$URL_METADATA)" ]; then
    echo "{\"nodeid\":\"$NODEID\"}" > $BASEDIR/metadata.conf
    rm $BASEDIR/metadata/tmp* || true;
    docker run -d --net=container:$CID -v $BASEDIR/metadata:/monroe/results -v /etc/nodeid:/nodeid:ro -v $BASEDIR/metadata.conf:/monroe/config:ro base-$URL_METADATA || true;
    logger -t monroe-experiments "started metadata container.";
  fi

  if [ -z "$(docker ps --no-trunc|grep base-$URL_MPLANE)" ]; then
    mkdir -p $BASEDIR/tstat # shared folder for tstat results
    rm $BASEDIR/mplane/tmp* || true;
    docker run -d --net=container:$CID \
               -v $BASEDIR/mplane:/monroe/results \
               -v $BASEDIR/tstat:/monroe/tstat    \
               -v /etc/nodeid:/nodeid:ro \
               base-$URL_MPLANE || true;
    logger -t monroe-experiments "started mplane container.";
  fi
fi

monroe-rsync-results     || true
monroe-user-experiments  || true

echo $(date +%s) > /tmp/monroe-experiments.last
